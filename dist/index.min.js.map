{"version":3,"file":"index.min.js","sources":["../src/index.js"],"sourcesContent":["import { has, isArray, isEqual, isObject, isPlainObject } from 'lodash/fp';\n\nconst ANY = Symbol('ANY');\nconst VOID = Symbol('VOID');\n\nfunction deepIncludePartial(data, pattern, comparator = isEqual) {\n    if (!isPlainObject(pattern) || !isPlainObject(data)) {\n        throw `Please pass a result object and a pattern object`;\n    }\n\n    if (typeof comparator != 'function') {\n        throw `Please pass a function comparator`;\n    }\n\n    for (const key in pattern) {\n        const current = data[key];\n        const should = pattern[key];\n\n        if (should === VOID) {\n            if (has(key, data)) return false;\n        } else if (should === ANY) {\n            if (!has(key, data)) return false;\n        } else if (isArray(should)) {\n            if (!isArray(current) || !comparator(current, should)) return false;\n        } else if (isObject(should)) {\n            if (!isObject(current) || !deepIncludePartial(current, should)) return false;\n        } else {\n            if (!comparator(current, should)) return false;\n        }\n    }\n    return true;\n}\n\n// * --------------------------------\n\nexport { deepIncludePartial, ANY, VOID };\n"],"names":["ANY","Symbol","VOID","deepIncludePartial","data","pattern","comparator","isEqual","isPlainObject","key","current","should","has","isArray","isObject"],"mappings":"gGAEMA,IAAMC,OAAO,OACbC,KAAOD,OAAO,QAEpB,SAASE,mBAAmBC,EAAMC,OAASC,yDAAaC,eAC/CC,iBAAcH,KAAaG,iBAAcJ,8DAIrB,mBAAdE,+CAIN,IAAMG,KAAOJ,EAAS,KACjBK,EAAUN,EAAKK,GACfE,EAASN,EAAQI,MAEnBE,IAAWT,SACPU,OAAIH,EAAKL,GAAO,OAAO,OACxB,GAAIO,IAAWX,SACbY,OAAIH,EAAKL,GAAO,OAAO,OACzB,GAAIS,WAAQF,QACVE,WAAQH,KAAaJ,EAAWI,EAASC,GAAS,OAAO,OAC3D,GAAIG,YAASH,QACXG,YAASJ,KAAaP,mBAAmBO,EAASC,GAAS,OAAO,WAElEL,EAAWI,EAASC,GAAS,OAAO,SAG1C"}